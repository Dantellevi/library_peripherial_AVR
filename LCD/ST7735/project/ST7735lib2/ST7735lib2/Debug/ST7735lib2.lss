
ST7735lib2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000444  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800060  00800060  000004b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000222c  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ca  00000000  00000000  000027f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b43  00000000  00000000  000031ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00003d00  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a30  00000000  00000000  00003e64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d0d  00000000  00000000  00004894  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  000055a1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 64 00 	jmp	0xc8	; 0xc8 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
   c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  24:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  34:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  40:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  48:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
  50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	04 e0       	ldi	r16, 0x04	; 4
  56:	10 02       	muls	r17, r16
  58:	1c 07       	cpc	r17, r28
  5a:	12 37       	cpi	r17, 0x72	; 114
  5c:	32 29       	or	r19, r2
  5e:	2d 29       	or	r18, r13
  60:	25 2b       	or	r18, r21
  62:	39 00       	.word	0x0039	; ????
  64:	01 03       	mulsu	r16, r17
  66:	10 e1       	ldi	r17, 0x10	; 16
  68:	10 03       	mulsu	r17, r16
  6a:	1d 07       	cpc	r17, r29
  6c:	06 2e       	mov	r0, r22
  6e:	2c 29       	or	r18, r12
  70:	2d 2e       	mov	r2, r29
  72:	2e 37       	cpi	r18, 0x7E	; 126
  74:	3f 00       	.word	0x003f	; ????
  76:	00 02       	muls	r16, r16
  78:	10 13       	cpse	r17, r16
  7a:	80 0a       	sbc	r8, r16
  7c:	29 80       	ldd	r2, Y+1	; 0x01
  7e:	64 02       	Address 0x0000007e is out of bounds.
.word	0xffff	; ????

0000007f <st7735_red_init_red2>:
  7f:	02 2a 04 00 00 00 7f 2b 04 00 00 00 9f              .*.....+.....

0000008c <st7735_red_init1>:
  8c:	0f 01 80 96 11 80 ff b1 03 01 2c 2d b2 03 01 2c     ..........,-...,
  9c:	2d b3 06 01 2c 2d 01 2c 2d b4 01 07 c0 03 a2 02     -...,-.,-.......
  ac:	84 c1 01 c5 c2 02 0a 00 c3 02 8a 2a c4 02 8a ee     ...........*....
  bc:	c5 01 0e 20 00 36 01 c8 3a 01 05 00                 ... .6..:...

000000c8 <__ctors_end>:
  c8:	11 24       	eor	r1, r1
  ca:	1f be       	out	0x3f, r1	; 63
  cc:	cf e5       	ldi	r28, 0x5F	; 95
  ce:	d4 e0       	ldi	r29, 0x04	; 4
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_clear_bss>:
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	a0 e6       	ldi	r26, 0x60	; 96
  d8:	b0 e0       	ldi	r27, 0x00	; 0
  da:	01 c0       	rjmp	.+2      	; 0xde <.do_clear_bss_start>

000000dc <.do_clear_bss_loop>:
  dc:	1d 92       	st	X+, r1

000000de <.do_clear_bss_start>:
  de:	a4 36       	cpi	r26, 0x64	; 100
  e0:	b2 07       	cpc	r27, r18
  e2:	e1 f7       	brne	.-8      	; 0xdc <.do_clear_bss_loop>
  e4:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  e8:	0c 94 20 02 	jmp	0x440	; 0x440 <_exit>

000000ec <__bad_interrupt>:
  ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <Port_init>:
#include "Main.h"

void Port_init(void)
{

DDRD|=(1<<PD5);
  f0:	8d 9a       	sbi	0x11, 5	; 17
PORTD|=(1<<PD5);
  f2:	95 9a       	sbi	0x12, 5	; 18
  f4:	08 95       	ret

000000f6 <main>:
}


int main(void)
{
Port_init();
  f6:	0e 94 78 00 	call	0xf0	; 0xf0 <Port_init>
spi_init();
  fa:	0e 94 8d 00 	call	0x11a	; 0x11a <spi_init>
st7735_init();
  fe:	0e 94 f6 00 	call	0x1ec	; 0x1ec <st7735_init>

st7735_set_orientation(ST7735_LANDSCAPE);
 102:	80 e0       	ldi	r24, 0x00	; 0
 104:	0e 94 39 01 	call	0x272	; 0x272 <st7735_set_orientation>
st7735_fill_rect(0, 0, 80, 60, ST7735_COLOR_BLACK);
 108:	00 e0       	ldi	r16, 0x00	; 0
 10a:	10 e0       	ldi	r17, 0x00	; 0
 10c:	2c e3       	ldi	r18, 0x3C	; 60
 10e:	40 e5       	ldi	r20, 0x50	; 80
 110:	60 e0       	ldi	r22, 0x00	; 0
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <st7735_fill_rect>

    /* Replace with your application code */
    while (1) 
    {
    }
 118:	ff cf       	rjmp	.-2      	; 0x118 <main+0x22>

0000011a <spi_init>:
#include "spi.h"

void spi_init(void) {
	// Set MOSI and SCK, SS/CS output, all others input
	DDRB = (1<<PB7) | (1<<PB5) | (1<<PB2);
 11a:	84 ea       	ldi	r24, 0xA4	; 164
 11c:	87 bb       	out	0x17, r24	; 23
	// Enable SPI, Master, set clock rate fck/4, mode 0
	SPCR = (1<<SPE) | (1<<MSTR);
 11e:	80 e5       	ldi	r24, 0x50	; 80
 120:	8d b9       	out	0x0d, r24	; 13

	// Set SS/CS
	PORTB |= (1 << PB2);
 122:	c2 9a       	sbi	0x18, 2	; 24
 124:	08 95       	ret

00000126 <st7735_run_command_list>:
  	spi_unset_cs();

	st7735_write_color(color);

  	spi_set_cs();
}
 126:	1f 93       	push	r17
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	9c 01       	movw	r18, r24
 12e:	2f 5f       	subi	r18, 0xFF	; 255
 130:	3f 4f       	sbci	r19, 0xFF	; 255
 132:	fc 01       	movw	r30, r24
 134:	74 91       	lpm	r23, Z
 136:	77 23       	and	r23, r23
 138:	09 f4       	brne	.+2      	; 0x13c <st7735_run_command_list+0x16>
 13a:	54 c0       	rjmp	.+168    	; 0x1e4 <st7735_run_command_list+0xbe>
 13c:	60 e0       	ldi	r22, 0x00	; 0
 13e:	b0 e0       	ldi	r27, 0x00	; 0
 140:	a0 e0       	ldi	r26, 0x00	; 0
 142:	c9 01       	movw	r24, r18
 144:	01 96       	adiw	r24, 0x01	; 1
 146:	f9 01       	movw	r30, r18
 148:	44 91       	lpm	r20, Z
 14a:	96 98       	cbi	0x12, 6	; 18
 14c:	c2 98       	cbi	0x18, 2	; 24
 14e:	4f b9       	out	0x0f, r20	; 15
 150:	77 9b       	sbis	0x0e, 7	; 14
 152:	fe cf       	rjmp	.-4      	; 0x150 <st7735_run_command_list+0x2a>
 154:	c2 9a       	sbi	0x18, 2	; 24
 156:	2e 5f       	subi	r18, 0xFE	; 254
 158:	3f 4f       	sbci	r19, 0xFF	; 255
 15a:	fc 01       	movw	r30, r24
 15c:	84 91       	lpm	r24, Z
 15e:	c8 2f       	mov	r28, r24
 160:	c0 78       	andi	r28, 0x80	; 128
 162:	8f 77       	andi	r24, 0x7F	; 127
 164:	a9 f0       	breq	.+42     	; 0x190 <st7735_run_command_list+0x6a>
 166:	12 2f       	mov	r17, r18
 168:	d3 2f       	mov	r29, r19
 16a:	81 50       	subi	r24, 0x01	; 1
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	28 0f       	add	r18, r24
 172:	39 1f       	adc	r19, r25
 174:	a9 01       	movw	r20, r18
 176:	e1 2f       	mov	r30, r17
 178:	fd 2f       	mov	r31, r29
 17a:	84 91       	lpm	r24, Z
 17c:	96 9a       	sbi	0x12, 6	; 18
 17e:	c2 98       	cbi	0x18, 2	; 24
 180:	8f b9       	out	0x0f, r24	; 15
 182:	77 9b       	sbis	0x0e, 7	; 14
 184:	fe cf       	rjmp	.-4      	; 0x182 <st7735_run_command_list+0x5c>
 186:	c2 9a       	sbi	0x18, 2	; 24
 188:	31 96       	adiw	r30, 0x01	; 1
 18a:	e4 17       	cp	r30, r20
 18c:	f5 07       	cpc	r31, r21
 18e:	a9 f7       	brne	.-22     	; 0x17a <st7735_run_command_list+0x54>
 190:	cc 23       	and	r28, r28
 192:	29 f1       	breq	.+74     	; 0x1de <st7735_run_command_list+0xb8>
 194:	a9 01       	movw	r20, r18
 196:	4f 5f       	subi	r20, 0xFF	; 255
 198:	5f 4f       	sbci	r21, 0xFF	; 255
 19a:	f9 01       	movw	r30, r18
 19c:	24 91       	lpm	r18, Z
 19e:	2f 3f       	cpi	r18, 0xFF	; 255
 1a0:	31 f0       	breq	.+12     	; 0x1ae <st7735_run_command_list+0x88>
 1a2:	30 e0       	ldi	r19, 0x00	; 0
 1a4:	12 16       	cp	r1, r18
 1a6:	13 06       	cpc	r1, r19
 1a8:	6c f0       	brlt	.+26     	; 0x1c4 <st7735_run_command_list+0x9e>
 1aa:	9a 01       	movw	r18, r20
 1ac:	18 c0       	rjmp	.+48     	; 0x1de <st7735_run_command_list+0xb8>
 1ae:	ff ef       	ldi	r31, 0xFF	; 255
 1b0:	24 e3       	ldi	r18, 0x34	; 52
 1b2:	8c e0       	ldi	r24, 0x0C	; 12
 1b4:	f1 50       	subi	r31, 0x01	; 1
 1b6:	20 40       	sbci	r18, 0x00	; 0
 1b8:	80 40       	sbci	r24, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <st7735_run_command_list+0x8e>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <st7735_run_command_list+0x98>
 1be:	00 00       	nop
 1c0:	9a 01       	movw	r18, r20
 1c2:	0d c0       	rjmp	.+26     	; 0x1de <st7735_run_command_list+0xb8>
 1c4:	8b 2f       	mov	r24, r27
 1c6:	9a 2f       	mov	r25, r26
 1c8:	ef e0       	ldi	r30, 0x0F	; 15
 1ca:	f7 e2       	ldi	r31, 0x27	; 39
 1cc:	31 97       	sbiw	r30, 0x01	; 1
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <st7735_run_command_list+0xa6>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <st7735_run_command_list+0xac>
 1d2:	00 00       	nop
 1d4:	05 96       	adiw	r24, 0x05	; 5
 1d6:	82 17       	cp	r24, r18
 1d8:	93 07       	cpc	r25, r19
 1da:	b4 f3       	brlt	.-20     	; 0x1c8 <st7735_run_command_list+0xa2>
 1dc:	9a 01       	movw	r18, r20
 1de:	6f 5f       	subi	r22, 0xFF	; 255
 1e0:	67 13       	cpse	r22, r23
 1e2:	af cf       	rjmp	.-162    	; 0x142 <st7735_run_command_list+0x1c>
 1e4:	df 91       	pop	r29
 1e6:	cf 91       	pop	r28
 1e8:	1f 91       	pop	r17
 1ea:	08 95       	ret

000001ec <st7735_init>:
 1ec:	81 b3       	in	r24, 0x11	; 17
 1ee:	80 6c       	ori	r24, 0xC0	; 192
 1f0:	81 bb       	out	0x11, r24	; 17
 1f2:	c2 98       	cbi	0x18, 2	; 24
 1f4:	97 9a       	sbi	0x12, 7	; 18
 1f6:	2f ef       	ldi	r18, 0xFF	; 255
 1f8:	84 e3       	ldi	r24, 0x34	; 52
 1fa:	9c e0       	ldi	r25, 0x0C	; 12
 1fc:	21 50       	subi	r18, 0x01	; 1
 1fe:	80 40       	sbci	r24, 0x00	; 0
 200:	90 40       	sbci	r25, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <st7735_init+0x10>
 204:	00 c0       	rjmp	.+0      	; 0x206 <st7735_init+0x1a>
 206:	00 00       	nop
 208:	97 98       	cbi	0x12, 7	; 18
 20a:	2f ef       	ldi	r18, 0xFF	; 255
 20c:	84 e3       	ldi	r24, 0x34	; 52
 20e:	9c e0       	ldi	r25, 0x0C	; 12
 210:	21 50       	subi	r18, 0x01	; 1
 212:	80 40       	sbci	r24, 0x00	; 0
 214:	90 40       	sbci	r25, 0x00	; 0
 216:	e1 f7       	brne	.-8      	; 0x210 <st7735_init+0x24>
 218:	00 c0       	rjmp	.+0      	; 0x21a <st7735_init+0x2e>
 21a:	00 00       	nop
 21c:	97 9a       	sbi	0x12, 7	; 18
 21e:	2f ef       	ldi	r18, 0xFF	; 255
 220:	84 e3       	ldi	r24, 0x34	; 52
 222:	9c e0       	ldi	r25, 0x0C	; 12
 224:	21 50       	subi	r18, 0x01	; 1
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <st7735_init+0x38>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <st7735_init+0x42>
 22e:	00 00       	nop
 230:	8c e8       	ldi	r24, 0x8C	; 140
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 93 00 	call	0x126	; 0x126 <st7735_run_command_list>
 238:	8f e7       	ldi	r24, 0x7F	; 127
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	0e 94 93 00 	call	0x126	; 0x126 <st7735_run_command_list>
 240:	84 e5       	ldi	r24, 0x54	; 84
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 93 00 	call	0x126	; 0x126 <st7735_run_command_list>
 248:	96 98       	cbi	0x12, 6	; 18
 24a:	c2 98       	cbi	0x18, 2	; 24
 24c:	86 e3       	ldi	r24, 0x36	; 54
 24e:	8f b9       	out	0x0f, r24	; 15
 250:	77 9b       	sbis	0x0e, 7	; 14
 252:	fe cf       	rjmp	.-4      	; 0x250 <st7735_init+0x64>
 254:	c2 9a       	sbi	0x18, 2	; 24
 256:	96 9a       	sbi	0x12, 6	; 18
 258:	c2 98       	cbi	0x18, 2	; 24
 25a:	80 ec       	ldi	r24, 0xC0	; 192
 25c:	8f b9       	out	0x0f, r24	; 15
 25e:	77 9b       	sbis	0x0e, 7	; 14
 260:	fe cf       	rjmp	.-4      	; 0x25e <st7735_init+0x72>
 262:	c2 9a       	sbi	0x18, 2	; 24
 264:	80 e8       	ldi	r24, 0x80	; 128
 266:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <st7735_width>
 26a:	80 ea       	ldi	r24, 0xA0	; 160
 26c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 270:	08 95       	ret

00000272 <st7735_set_orientation>:
 272:	96 98       	cbi	0x12, 6	; 18
 274:	c2 98       	cbi	0x18, 2	; 24
 276:	96 e3       	ldi	r25, 0x36	; 54
 278:	9f b9       	out	0x0f, r25	; 15
 27a:	77 9b       	sbis	0x0e, 7	; 14
 27c:	fe cf       	rjmp	.-4      	; 0x27a <st7735_set_orientation+0x8>
 27e:	c2 9a       	sbi	0x18, 2	; 24
 280:	81 30       	cpi	r24, 0x01	; 1
 282:	31 f0       	breq	.+12     	; 0x290 <st7735_set_orientation+0x1e>
 284:	98 f0       	brcs	.+38     	; 0x2ac <st7735_set_orientation+0x3a>
 286:	82 30       	cpi	r24, 0x02	; 2
 288:	61 f1       	breq	.+88     	; 0x2e2 <st7735_set_orientation+0x70>
 28a:	83 30       	cpi	r24, 0x03	; 3
 28c:	e9 f0       	breq	.+58     	; 0x2c8 <st7735_set_orientation+0x56>
 28e:	08 95       	ret
 290:	96 9a       	sbi	0x12, 6	; 18
 292:	c2 98       	cbi	0x18, 2	; 24
 294:	80 ec       	ldi	r24, 0xC0	; 192
 296:	8f b9       	out	0x0f, r24	; 15
 298:	77 9b       	sbis	0x0e, 7	; 14
 29a:	fe cf       	rjmp	.-4      	; 0x298 <st7735_set_orientation+0x26>
 29c:	c2 9a       	sbi	0x18, 2	; 24
 29e:	80 e8       	ldi	r24, 0x80	; 128
 2a0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <st7735_width>
 2a4:	80 ea       	ldi	r24, 0xA0	; 160
 2a6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 2aa:	08 95       	ret
 2ac:	96 9a       	sbi	0x12, 6	; 18
 2ae:	c2 98       	cbi	0x18, 2	; 24
 2b0:	80 ea       	ldi	r24, 0xA0	; 160
 2b2:	8f b9       	out	0x0f, r24	; 15
 2b4:	77 9b       	sbis	0x0e, 7	; 14
 2b6:	fe cf       	rjmp	.-4      	; 0x2b4 <st7735_set_orientation+0x42>
 2b8:	c2 9a       	sbi	0x18, 2	; 24
 2ba:	80 ea       	ldi	r24, 0xA0	; 160
 2bc:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <st7735_width>
 2c0:	80 e8       	ldi	r24, 0x80	; 128
 2c2:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 2c6:	08 95       	ret
 2c8:	96 9a       	sbi	0x12, 6	; 18
 2ca:	c2 98       	cbi	0x18, 2	; 24
 2cc:	1f b8       	out	0x0f, r1	; 15
 2ce:	77 9b       	sbis	0x0e, 7	; 14
 2d0:	fe cf       	rjmp	.-4      	; 0x2ce <st7735_set_orientation+0x5c>
 2d2:	c2 9a       	sbi	0x18, 2	; 24
 2d4:	80 e8       	ldi	r24, 0x80	; 128
 2d6:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <st7735_width>
 2da:	80 ea       	ldi	r24, 0xA0	; 160
 2dc:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 2e0:	08 95       	ret
 2e2:	96 9a       	sbi	0x12, 6	; 18
 2e4:	c2 98       	cbi	0x18, 2	; 24
 2e6:	80 e6       	ldi	r24, 0x60	; 96
 2e8:	8f b9       	out	0x0f, r24	; 15
 2ea:	77 9b       	sbis	0x0e, 7	; 14
 2ec:	fe cf       	rjmp	.-4      	; 0x2ea <st7735_set_orientation+0x78>
 2ee:	c2 9a       	sbi	0x18, 2	; 24
 2f0:	80 ea       	ldi	r24, 0xA0	; 160
 2f2:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <st7735_width>
 2f6:	80 e8       	ldi	r24, 0x80	; 128
 2f8:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <_edata>
 2fc:	08 95       	ret

000002fe <st7735_set_addr_win>:
 2fe:	96 98       	cbi	0x12, 6	; 18
 300:	c2 98       	cbi	0x18, 2	; 24
 302:	9a e2       	ldi	r25, 0x2A	; 42
 304:	9f b9       	out	0x0f, r25	; 15
 306:	77 9b       	sbis	0x0e, 7	; 14
 308:	fe cf       	rjmp	.-4      	; 0x306 <st7735_set_addr_win+0x8>
 30a:	c2 9a       	sbi	0x18, 2	; 24
 30c:	96 9a       	sbi	0x12, 6	; 18
 30e:	c2 98       	cbi	0x18, 2	; 24
 310:	1f b8       	out	0x0f, r1	; 15
 312:	77 9b       	sbis	0x0e, 7	; 14
 314:	fe cf       	rjmp	.-4      	; 0x312 <st7735_set_addr_win+0x14>
 316:	c2 9a       	sbi	0x18, 2	; 24
 318:	90 91 62 00 	lds	r25, 0x0062	; 0x800062 <st7735_column_start>
 31c:	89 0f       	add	r24, r25
 31e:	96 9a       	sbi	0x12, 6	; 18
 320:	c2 98       	cbi	0x18, 2	; 24
 322:	8f b9       	out	0x0f, r24	; 15
 324:	77 9b       	sbis	0x0e, 7	; 14
 326:	fe cf       	rjmp	.-4      	; 0x324 <st7735_set_addr_win+0x26>
 328:	c2 9a       	sbi	0x18, 2	; 24
 32a:	96 9a       	sbi	0x12, 6	; 18
 32c:	c2 98       	cbi	0x18, 2	; 24
 32e:	1f b8       	out	0x0f, r1	; 15
 330:	77 9b       	sbis	0x0e, 7	; 14
 332:	fe cf       	rjmp	.-4      	; 0x330 <st7735_set_addr_win+0x32>
 334:	c2 9a       	sbi	0x18, 2	; 24
 336:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <st7735_column_start>
 33a:	48 0f       	add	r20, r24
 33c:	96 9a       	sbi	0x12, 6	; 18
 33e:	c2 98       	cbi	0x18, 2	; 24
 340:	4f b9       	out	0x0f, r20	; 15
 342:	77 9b       	sbis	0x0e, 7	; 14
 344:	fe cf       	rjmp	.-4      	; 0x342 <st7735_set_addr_win+0x44>
 346:	c2 9a       	sbi	0x18, 2	; 24
 348:	96 98       	cbi	0x12, 6	; 18
 34a:	c2 98       	cbi	0x18, 2	; 24
 34c:	8b e2       	ldi	r24, 0x2B	; 43
 34e:	8f b9       	out	0x0f, r24	; 15
 350:	77 9b       	sbis	0x0e, 7	; 14
 352:	fe cf       	rjmp	.-4      	; 0x350 <st7735_set_addr_win+0x52>
 354:	c2 9a       	sbi	0x18, 2	; 24
 356:	96 9a       	sbi	0x12, 6	; 18
 358:	c2 98       	cbi	0x18, 2	; 24
 35a:	1f b8       	out	0x0f, r1	; 15
 35c:	77 9b       	sbis	0x0e, 7	; 14
 35e:	fe cf       	rjmp	.-4      	; 0x35c <st7735_set_addr_win+0x5e>
 360:	c2 9a       	sbi	0x18, 2	; 24
 362:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <st7735_row_start>
 366:	68 0f       	add	r22, r24
 368:	96 9a       	sbi	0x12, 6	; 18
 36a:	c2 98       	cbi	0x18, 2	; 24
 36c:	6f b9       	out	0x0f, r22	; 15
 36e:	77 9b       	sbis	0x0e, 7	; 14
 370:	fe cf       	rjmp	.-4      	; 0x36e <st7735_set_addr_win+0x70>
 372:	c2 9a       	sbi	0x18, 2	; 24
 374:	96 9a       	sbi	0x12, 6	; 18
 376:	c2 98       	cbi	0x18, 2	; 24
 378:	1f b8       	out	0x0f, r1	; 15
 37a:	77 9b       	sbis	0x0e, 7	; 14
 37c:	fe cf       	rjmp	.-4      	; 0x37a <st7735_set_addr_win+0x7c>
 37e:	c2 9a       	sbi	0x18, 2	; 24
 380:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <st7735_row_start>
 384:	28 0f       	add	r18, r24
 386:	96 9a       	sbi	0x12, 6	; 18
 388:	c2 98       	cbi	0x18, 2	; 24
 38a:	2f b9       	out	0x0f, r18	; 15
 38c:	77 9b       	sbis	0x0e, 7	; 14
 38e:	fe cf       	rjmp	.-4      	; 0x38c <st7735_set_addr_win+0x8e>
 390:	c2 9a       	sbi	0x18, 2	; 24
 392:	96 98       	cbi	0x12, 6	; 18
 394:	c2 98       	cbi	0x18, 2	; 24
 396:	8c e2       	ldi	r24, 0x2C	; 44
 398:	8f b9       	out	0x0f, r24	; 15
 39a:	77 9b       	sbis	0x0e, 7	; 14
 39c:	fe cf       	rjmp	.-4      	; 0x39a <st7735_set_addr_win+0x9c>
 39e:	c2 9a       	sbi	0x18, 2	; 24
 3a0:	08 95       	ret

000003a2 <st7735_fill_rect>:


void st7735_fill_rect(uint8_t x, uint8_t y, uint8_t w, uint8_t h, uint16_t color) {
 3a2:	0f 93       	push	r16
 3a4:	1f 93       	push	r17
 3a6:	cf 93       	push	r28
 3a8:	df 93       	push	r29
 3aa:	c4 2f       	mov	r28, r20
 3ac:	d2 2f       	mov	r29, r18
	if(x >= st7735_width || y >= st7735_height) {
 3ae:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <st7735_width>
 3b2:	89 17       	cp	r24, r25
 3b4:	08 f0       	brcs	.+2      	; 0x3b8 <st7735_fill_rect+0x16>
 3b6:	3f c0       	rjmp	.+126    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3b8:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <_edata>
 3bc:	64 17       	cp	r22, r20
 3be:	d8 f5       	brcc	.+118    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
		return;
	}

	if((x + w - 1) >= st7735_width) {
 3c0:	2c 2f       	mov	r18, r28
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	28 0f       	add	r18, r24
 3c6:	31 1d       	adc	r19, r1
 3c8:	21 50       	subi	r18, 0x01	; 1
 3ca:	31 09       	sbc	r19, r1
 3cc:	e9 2f       	mov	r30, r25
 3ce:	f0 e0       	ldi	r31, 0x00	; 0
 3d0:	2e 17       	cp	r18, r30
 3d2:	3f 07       	cpc	r19, r31
 3d4:	14 f0       	brlt	.+4      	; 0x3da <st7735_fill_rect+0x38>
		w = st7735_width  - x;
 3d6:	c9 2f       	mov	r28, r25
 3d8:	c8 1b       	sub	r28, r24
	}
	if((y + h - 1) >= st7735_height) {
 3da:	2d 2f       	mov	r18, r29
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	26 0f       	add	r18, r22
 3e0:	31 1d       	adc	r19, r1
 3e2:	21 50       	subi	r18, 0x01	; 1
 3e4:	31 09       	sbc	r19, r1
 3e6:	e4 2f       	mov	r30, r20
 3e8:	f0 e0       	ldi	r31, 0x00	; 0
 3ea:	2e 17       	cp	r18, r30
 3ec:	3f 07       	cpc	r19, r31
 3ee:	14 f0       	brlt	.+4      	; 0x3f4 <st7735_fill_rect+0x52>
		h = st7735_height - y;
 3f0:	d4 2f       	mov	r29, r20
 3f2:	d6 1b       	sub	r29, r22
 3f4:	2f ef       	ldi	r18, 0xFF	; 255
 3f6:	26 0f       	add	r18, r22
	}

	st7735_set_addr_win(x, y, x + w - 1, y + h - 1);
 3f8:	2d 0f       	add	r18, r29
 3fa:	4f ef       	ldi	r20, 0xFF	; 255
 3fc:	48 0f       	add	r20, r24
 3fe:	4c 0f       	add	r20, r28
 400:	0e 94 7f 01 	call	0x2fe	; 0x2fe <st7735_set_addr_win>
uint8_t st7735_width = 0;
uint8_t st7735_height = 0;
enum ST7735_ORIENTATION st7735_orientation = ST7735_LANDSCAPE;

static inline void st7735_set_rs(void) {
	PORTD |= (1 << PD6);
 404:	96 9a       	sbi	0x12, 6	; 18
static inline void spi_set_cs(void) {
	PORTB |= (1 << PB2);
}

static inline void spi_unset_cs(void) {
	PORTB &= ~(1 << PB2);
 406:	c2 98       	cbi	0x18, 2	; 24
	st7735_set_addr_win(x, y, x + w - 1, y + h - 1);

	st7735_set_rs();
	spi_unset_cs();

	for(uint8_t i = 0; i < h; i++) {
 408:	dd 23       	and	r29, r29
 40a:	a1 f0       	breq	.+40     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
	spi_write(data);
	spi_set_cs();
}

static inline void st7735_write_color(uint16_t color) {
	spi_write(color >> 8);
 40c:	91 2f       	mov	r25, r17
 40e:	30 e0       	ldi	r19, 0x00	; 0

	st7735_set_rs();
	spi_unset_cs();

	for(uint8_t i = 0; i < h; i++) {
		for(uint8_t j = 0; j < w; j++) {
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	0d c0       	rjmp	.+26     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 414:	82 2f       	mov	r24, r18
#include "Main.h"

void spi_init(void);

static inline void spi_write(uint8_t byte) {
	SPDR = byte;
 416:	9f b9       	out	0x0f, r25	; 15
	while(!(SPSR & (1<<SPIF)));
 418:	77 9b       	sbis	0x0e, 7	; 14
 41a:	fe cf       	rjmp	.-4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
#include "Main.h"

void spi_init(void);

static inline void spi_write(uint8_t byte) {
	SPDR = byte;
 41c:	0f b9       	out	0x0f, r16	; 15
	while(!(SPSR & (1<<SPIF)));
 41e:	77 9b       	sbis	0x0e, 7	; 14
 420:	fe cf       	rjmp	.-4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 422:	8f 5f       	subi	r24, 0xFF	; 255
 424:	8c 13       	cpse	r24, r28
 426:	f7 cf       	rjmp	.-18     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
	st7735_set_addr_win(x, y, x + w - 1, y + h - 1);

	st7735_set_rs();
	spi_unset_cs();

	for(uint8_t i = 0; i < h; i++) {
 428:	3f 5f       	subi	r19, 0xFF	; 255
 42a:	3d 17       	cp	r19, r29
 42c:	19 f0       	breq	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
		for(uint8_t j = 0; j < w; j++) {
 42e:	c1 11       	cpse	r28, r1
 430:	f1 cf       	rjmp	.-30     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 432:	fa cf       	rjmp	.-12     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
}

static inline void spi_set_cs(void) {
	PORTB |= (1 << PB2);
 434:	c2 9a       	sbi	0x18, 2	; 24
			st7735_write_color(color);
		}
	}

	spi_set_cs();
}
 436:	df 91       	pop	r29
 438:	cf 91       	pop	r28
 43a:	1f 91       	pop	r17
 43c:	0f 91       	pop	r16
 43e:	08 95       	ret

00000440 <_exit>:
 440:	f8 94       	cli

00000442 <__stop_program>:
 442:	ff cf       	rjmp	.-2      	; 0x442 <__stop_program>
