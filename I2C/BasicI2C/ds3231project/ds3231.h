
#ifndef DS3231_H_
#define DS3231_H_


#include "Main.h"


// Адрес устройства

#define DS3231_ADD_W				0xD0
#define DS3231_ADD_R				0xD1

// Адреса регистров

#define DS3231_SECONDS				0x00	// Адрес регистра секунд
#define DS3231_MINUTES				0x01	// Адрес регистра минут
#define DS3231_HOURS				0x02	// Адрес регистра часов
#define DS3231_DAY					0x03	// Адрес регистра дня недели
#define DS3231_DATE					0x04	// Адрес регистра числа
#define DS3231_MONTH				0x05	// Адрес регистра месяца
#define DS3231_YEAR					0x06	// Адрес регистра года
#define DS3231_ALARM_1_SEC			0x07	// Адрес регистра будильника 1 секунд
#define DS3231_ALARM_1_MIN			0x08	// Адрес регистра будильника 1 минут
#define DS3231_ALARM_1_HOR			0x09	// Адрес регистра будильника 1 часов
#define DS3231_ALARM_1_DAY			0x0A	// Адрес регистра будильника 1 дня недели
#define DS3231_ALARM_1_DAT			0x0A	// Адрес регистра будильника 1 числа
#define DS3231_ALARM_2_MIN			0x0B	// Адрес регистра будильника 2 минут
#define DS3231_ALARM_2_HOR			0x0C	// Адрес регистра будильника 2 часов
#define DS3231_ALARM_2_DAY			0x0D	// Адрес регистра будильника 2 вдя недели
#define DS3231_ALARM_2_DAT			0x0D	// Адрес регистра будильника 2 числа
#define DS3231_CONTROL				0x0E	// Адрес регистра управления
#define DS3231_STATUS				0x0F	// Адрес регистра состояния
#define DS3231_SET_CLOCK			0x10	// Адрес регистра корректировки частоты генератора времяни (0x81 - 0x7F)
#define DS3231_T_MSB				0x11	// Адрес регистра последней измеренной температуры старшиий байт
#define DS3231_T_LSB				0x12	// Адрес регистра последней измеренной температуры младшиий байт

// Режим вывода часов

#define DS3231_HOURS_12				0x40
#define DS3231_24					0x3F
#define DS3231_AM					0x5F
#define DS3231_PM					0x60
#define DS3231_GET_24				0x02
#define DS3231_GET_PM				0x01
#define DS3231_GET_AM				0x00

// Разряды регистров

#define DS3231_A1M1					0x07
#define DS3231_A1M2					0x07
#define DS3231_A1M3					0x07
#define DS3231_A1M4					0x07
#define DS3231_A2M2					0x07
#define DS3231_A2M3					0x07
#define DS3231_A2M4					0x07
#define DS3231_DY_DT				0x06
#define DS3231_EOSC					0x07
#define DS3231_BBSQW				0x06
#define DS3231_CONV					0x05
#define DS3231_INTCN				0x02
#define DS3231_A2IE					0x01
#define DS3231_A1IE					0x00
#define DS3231_OSF					0x07
#define DS3231_EN32KHZ				0x03
#define DS3231_BSY					0x02
#define DS3231_A2F					0x01
#define DS3231_A1F					0x00
#define DS3231_SIGN					0x07

// Выбор частоты выходного сигнала INT/SQW

#define DS3231_SQW_OUT_1HZ			0x00	// 1 Гц
#define DS3231_SQW_OUT_1KHZ			0x08	// 1.024 кГц
#define DS3231_SQW_OUT_4KHZ			0x10	// 4.096 кГц
#define DS3231_SQW_OUT_8KHZ			0x18	// 8.192 кГц

// Логический уровень при выключеном SQW/OUT

#define DS3231_OUT_HIGHT			0x80
#define DS3231_OUT_LOW				0x00

// Вспомогательные данные функций
#define FALSE 0
#define TRUE  1
#define DS3231_ERR					FALSE
#define DS3231_OK					TRUE
#define DS3231_ON					TRUE
#define DS3231_OFF					FALSE

// Будильники

#define DS3231_ALARM_1				0x00
#define DS3231_ALARM_2				0x01
#define DS3231_ALARM_OFF			0x00
#define DS3231_ALARM_1_ON			0x01
#define DS3231_ALARM_2_ON			0x02
#define DS3231_ALARM_ALL_ON			0x03

//=========================================Прототипы функций=====================
//-------------------------------------------------------------------------
//	Функция инициализации часов реального врмени DS3231.
//
//-------------------------------------------------------------------------

void ds3231_init(void);


//-------------------------------------------------------------------------
//
//	Функция записи байта в регистр
//
//	Принимает аргументы:
//
//		 reg // Адрес регистра
//		 data // Байт для записи
//-------------------------------------------------------------------------

void ds3231_write_reg(char reg, char data);


//-------------------------------------------------------------------------
//
//	Функция чтения байта из регистра
//
//	Принимает аргументы:
//
//		 reg // Адрес регистра
//
//	Возвращает прочитанный байт
//-------------------------------------------------------------------------
unsigned char ds32_read_reg(unsigned char reg);



//-------------------------------------------------------------------------
//	Функция подготовки значения данных
//
//
//	Принимает в качестве аргумента десятичное значение
//
//	Возвращаемое значение
//
//		Преобразованное для записи в часы
//
//-------------------------------------------------------------------------

char ds3231_byte(char data);


//-------------------------------------------------------------------------
//	Функция чтения времени
//
//
//	Принимает аргумент указатель на первый элемент массива.
//
//	После вызовы данной функции в массиве будет лежать прочитанное время.
//	В первом элементе часы, во втором минуты, в третьем секунды.
//
//	Возвращаемые значения:
//
//	Режим счета часов, либо DS3231_GET_24, либо DS3231_GET_AM, либо DS3231_GET_PM
//
//-------------------------------------------------------------------------

void ds3231_read_time(char *str);


//-------------------------------------------------------------------------
//	Функция записи времени
//
//	Принимает аргументы:
//
//	Тип счета часов (DS3231_24, либо DS3231_AM, либо DS3231_PM) часы, минуты, секунды.
//
//-------------------------------------------------------------------------

void ds3231_write_time(char h1224, char hours, char minutes, char seconds);

//-------------------------------------------------------------------------
//	Функция чтения даты
//
//
//	Принимает аргумент указатель на первый элемент массива.
//
//	После вызовы данной функции в массиве будет лежать прочитанное время.
//	В первом элементе день недели, во втором число, в третьем месяц, в четвертом год 00-99.
//
//
//-------------------------------------------------------------------------

void ds3231_read_data(char *str);




#endif /* DS3231_H_ */